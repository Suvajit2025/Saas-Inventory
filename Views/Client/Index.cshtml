@model Invi.Models.PartyViewModel
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<!-- Attractive Tabs -->

<div class="content container-fluid pb-0">
	@* <div class="page-header">
		<div class="row">
			<div class="col-sm-6">
				<h3 class="page-title">New Party</h3>

			</div>
		</div>
	</div> *@
	<div class="row">
		<div class="col-md-12">
			<div class="card">
				<form class="row g-3 needs-validation mt-1" method="post" action="/Client/SavePartyDetails" enctype="multipart/form-data" novalidate>
				<div class="card-header ">
					<h4 class="card-title">Party Basic Details:[New]</h4>
				</div>
				<div class="card-body">
					
						<div class="row">
							@Html.HiddenFor(m => m.PartyId, new { @class = "form-control"})
							<div class="col-md-6">
								<div class="form-group">
									<div class="row">
										<label for="PartyTypeId" class="col-form-label col-sm-4">
											Party Type
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" title="Select the classification of the party, such as Customer, Vendor, or Supplier."></i>
										</label>
										<div class="col-sm-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-menu-app"></i>
												</span>
												@Html.DropDownListFor(model => model.PartyTypeId,
												new SelectList(Model.PartyTypes, "PartyTypeId", "TypeName", Model.PartyTypeId),
																								"-- Select Party Type --",
																								new { @class = "form-select" }) <!-- Bootstrap 5: use form-select -->
											</div>
										</div>
									</div>
								</div>

								<div class="form-group">
									<div class="row">
										<label for="CustomerType" class="col-form-label col-lg-4">
											Customer Type
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" title="The contacts which are associated to any Account in CRM is of type Business and the other contacts will be of type Individual."></i>
										</label>
										<div class="inline-fields col-lg-8 d-flex align-items-center flex-wrap gap-2">
											@foreach (var type in Model.CustomerTypes)
											{
												<div class="form-check form-check-inline">
													<input type="radio" class="form-check-input" name="CustomerTypeId" value="@type.CustomerTypeId" @(type.CustomerTypeId == Model.CustomerTypeId ? "checked" : "") />
													<label class="form-check-label">@type.TypeName</label>
												</div>
											}

										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="PartyName" class="col-form-label col-lg-4">
											Company Name
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" title="This is the legal or business name of the party."></i>
										</label>
										<div class="inline-fields col-lg-8">
											@Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", placeholder = "Enter Company name" })
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="ContactPerson" class="col-form-label col-lg-4">
											Primary Contact
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" title="The primary contact will receive all emails related to transactions. You can add multiple contact persons below details Section."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="row">
												<div aria-label="Salutation" class="col-md-3 pe-1 ">
													@Html.DropDownListFor(m => m.NamePrefix,
													new SelectList(new[] { "Mr.", "Mrs.", "Ms.", "Miss.", "Dr." }), "Prefix",
																										new { @class = "form-control", id = "prefix" })
												</div>
												<div class="col-md-9">
													@Html.TextBoxFor(m => m.ContactName, new { @class = "form-control", placeholder = "Contact Name" })
												</div>
												
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="Email" class="col-form-label col-lg-4">
											Email Address
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true" title="<b>Privacy Info:</b>This data will be stored without encryption and will be visible only to your organisation users who have the required permission."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-envelope"></i>
												</span>
												@Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter Mail Address" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="phone" class="col-form-label col-lg-4">
											Mobile No
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true" title="<b>Privacy Info:</b> This data will be stored without encryption and will be visible only to your organisation users who have the required permission."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-phone"></i>
												</span>
												@Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "Enter Mobile Number" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="gst" class="col-form-label col-lg-4">
											GST Number
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true" title="<b>Privacy Info:</b> This data will be encrypted and stored. It will be visible only to your organisation users who have the required permission."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-card-text"></i>
												</span>
												@Html.TextBoxFor(m => m.GSTIN, new { @class = "form-control", placeholder = "Enter Correct GST Number" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="Panno" class="col-form-label col-lg-4">
											PAN Number
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true"
											   title="<b>Privacy Info:</b> This data will be encrypted and stored. It will be visible only to your organisation users who have the required permission."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-person-vcard"></i>
												</span>
												@Html.TextBoxFor(m => m.PAN, new { @class = "form-control", placeholder = "Enter Correct PAN Number" })
											</div>
										</div>
									</div>
								</div>

							</div>
							<div class="col-md-6">
								<div class="form-group">
									<div class="row">
										<label for="Panno" class="col-form-label col-lg-4">
											Company Address
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true"
											   title="Enter the full address of the party or company, including street, city, and pin code. This address is used for shipping, communication, and legal purposes, and is essential for accurate GST calculation."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-person-vcard"></i>
												</span>
												@Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Enter Correct Full Address" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="Panno" class="col-form-label col-lg-4">
											City
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true"
											   title="Enter the city where the party or company is located. This helps in identifying the region for shipping, communication, and legal purposes. It also ensures correct GST calculation when combined with the state."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-person-vcard"></i>
												</span>
												@Html.TextBoxFor(m => m.City, new { @class = "form-control", placeholder = "Enter Correct City Name" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="StateId" class="col-form-label col-sm-4">
											State 
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" title="Select the state where the party or company is located. This helps in identifying the correct region for business and legal purposes. It also ensures the correct GST calculation based on the state's tax regulations."></i>
										</label>
										<div class="col-sm-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-menu-app"></i>
												</span>
												<select id="StateId" name="StateId" class="form-control select2">
													<option disabled selected>-- Select State --</option>
													@foreach (var item in Model.stateLists)
													{
														if (Model.StateId == item.StateId)
														{
															@:<option value="@item.StateId" selected>@item.StateName</option>
														}
														else
														{
															@:<option value="@item.StateId">@item.StateName</option>
														}
													}
												</select>
											</div>
										</div>
									</div>
								</div>

								 


								<div class="form-group">
									<div class="row">
										<label for="Panno" class="col-form-label col-lg-4">
											Pin Code
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true"
											   title="Enter the postal code (Pin Code) of the party’s address. This helps in identifying the location for shipping and communication purposes."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-person-vcard"></i>
												</span>
												@Html.TextBoxFor(m => m.PinCode, new { @class = "form-control", placeholder = "Enter Correct Pin Code" })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="Email" class="col-form-label col-lg-4">
											Credit Days
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true" title="Enter the number of days the party has to pay after receiving the invoice. This defines the payment terms for the party."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-calendar3"></i>
												</span>
												@Html.TextBoxFor(m => m.CreditDays, new { @class = "form-control", placeholder = "Enter Number of Days " })
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<label for="phone" class="col-form-label col-lg-4">
											Credit Amount
											<i class="bi bi-info-circle text-primary m-1" data-bs-toggle="tooltip" data-bs-html="true" title="Enter the amount of credit extended to the party. This is the total credit limit for the party, which they can use for purchasing products or services."></i>
										</label>
										<div class="inline-fields col-lg-8">
											<div class="input-group">
												<span class="input-group-text">
													<i class="bi bi-currency-rupee"></i>
												</span>
												@Html.TextBoxFor(m => m.Creditamount, new { @class = "form-control", placeholder = "Enter Amount " })
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
				</div>
				<!-- Submit Button -->
				<div class="card-footer">
					<div class="text-end">
						<button type="submit" class="btn btn-primary">Submit</button>
					</div>
				</div>
				</form>
			</div>
		</div>
	</div>


</div>
@section Style {
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
}
@section Scripts{
	<script src="/assets/js/script.js"></script>
	<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.16/dist/sweetalert2.all.min.js"></script>
	<script>
		// Example starter JavaScript for disabling form submissions if there are invalid fields
				(function () {
			'use strict';

			// Fetch the form we want to apply custom Bootstrap validation styles to
			var form = document.querySelector('.needs-validation');

			// If form is found, add event listener for submit
			if (form) {
				form.addEventListener('submit', function (event) {
					if (!form.checkValidity()) {
						event.preventDefault(); // Prevent form submission if invalid
						event.stopPropagation(); // Prevent the form from submitting
					} else {
						// Custom submit logic here if needed (e.g., via AJAX)
						var formData = new FormData(form);
						fetch(form.action, {
							method: 'POST',
							body: formData,
						})
							.then(response => response.json())
							.then(data => {
								if (data.success) {
									// Handle success
									alert(data.message);
								} else {
									// Handle error
									alert(data.message);
								}
							})
							.catch(error => {
								// Handle error
								alert("An error occurred: " + error);
							});
					}

					form.classList.add('was-validated'); // Add 'was-validated' class for styling
				}, false);
			}
		})();

	</script>
}